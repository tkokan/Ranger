#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ranger
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Ranger")]
	public partial class RangerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertCardinalDirectionPoint(CardinalDirectionPoint instance);
    partial void UpdateCardinalDirectionPoint(CardinalDirectionPoint instance);
    partial void DeleteCardinalDirectionPoint(CardinalDirectionPoint instance);
    partial void InsertGridNode(GridNode instance);
    partial void UpdateGridNode(GridNode instance);
    partial void DeleteGridNode(GridNode instance);
    partial void InsertOrigin(Origin instance);
    partial void UpdateOrigin(Origin instance);
    partial void DeleteOrigin(Origin instance);
    #endregion
		
		public RangerDataContext() : 
				base(global::Ranger.Properties.Settings.Default.RangerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RangerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RangerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RangerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RangerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Region> Regions
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<CardinalDirectionPoint> CardinalDirectionPoints
		{
			get
			{
				return this.GetTable<CardinalDirectionPoint>();
			}
		}
		
		public System.Data.Linq.Table<GridNode> GridNodes
		{
			get
			{
				return this.GetTable<GridNode>();
			}
		}
		
		public System.Data.Linq.Table<Origin> Origins
		{
			get
			{
				return this.GetTable<Origin>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Regions")]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OriginId;
		
		private int _RangeMins;
		
		private int _UnitDistance;
		
		private double _Area;
		
		private int _BorderNodes;
		
		private EntityRef<Origin> _Origin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOriginIdChanging(int value);
    partial void OnOriginIdChanged();
    partial void OnRangeMinsChanging(int value);
    partial void OnRangeMinsChanged();
    partial void OnUnitDistanceChanging(int value);
    partial void OnUnitDistanceChanged();
    partial void OnAreaChanging(double value);
    partial void OnAreaChanged();
    partial void OnBorderNodesChanging(int value);
    partial void OnBorderNodesChanged();
    #endregion
		
		public Region()
		{
			this._Origin = default(EntityRef<Origin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OriginId
		{
			get
			{
				return this._OriginId;
			}
			set
			{
				if ((this._OriginId != value))
				{
					if (this._Origin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOriginIdChanging(value);
					this.SendPropertyChanging();
					this._OriginId = value;
					this.SendPropertyChanged("OriginId");
					this.OnOriginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RangeMins", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RangeMins
		{
			get
			{
				return this._RangeMins;
			}
			set
			{
				if ((this._RangeMins != value))
				{
					this.OnRangeMinsChanging(value);
					this.SendPropertyChanging();
					this._RangeMins = value;
					this.SendPropertyChanged("RangeMins");
					this.OnRangeMinsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitDistance", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UnitDistance
		{
			get
			{
				return this._UnitDistance;
			}
			set
			{
				if ((this._UnitDistance != value))
				{
					this.OnUnitDistanceChanging(value);
					this.SendPropertyChanging();
					this._UnitDistance = value;
					this.SendPropertyChanged("UnitDistance");
					this.OnUnitDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="Float NOT NULL")]
		public double Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorderNodes", DbType="Int NOT NULL")]
		public int BorderNodes
		{
			get
			{
				return this._BorderNodes;
			}
			set
			{
				if ((this._BorderNodes != value))
				{
					this.OnBorderNodesChanging(value);
					this.SendPropertyChanging();
					this._BorderNodes = value;
					this.SendPropertyChanged("BorderNodes");
					this.OnBorderNodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Origin_Region", Storage="_Origin", ThisKey="OriginId", OtherKey="Id", IsForeignKey=true)]
		public Origin Origin
		{
			get
			{
				return this._Origin.Entity;
			}
			set
			{
				Origin previousValue = this._Origin.Entity;
				if (((previousValue != value) 
							|| (this._Origin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Origin.Entity = null;
						previousValue.Regions.Remove(this);
					}
					this._Origin.Entity = value;
					if ((value != null))
					{
						value.Regions.Add(this);
						this._OriginId = value.Id;
					}
					else
					{
						this._OriginId = default(int);
					}
					this.SendPropertyChanged("Origin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CardinalDirectionPoints")]
	public partial class CardinalDirectionPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OriginId;
		
		private int _UnitDistance;
		
		private int _direction;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntityRef<Origin> _Origin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOriginIdChanging(int value);
    partial void OnOriginIdChanged();
    partial void OnUnitDistanceChanging(int value);
    partial void OnUnitDistanceChanged();
    partial void OndirectionChanging(int value);
    partial void OndirectionChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public CardinalDirectionPoint()
		{
			this._Origin = default(EntityRef<Origin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OriginId
		{
			get
			{
				return this._OriginId;
			}
			set
			{
				if ((this._OriginId != value))
				{
					if (this._Origin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOriginIdChanging(value);
					this.SendPropertyChanging();
					this._OriginId = value;
					this.SendPropertyChanged("OriginId");
					this.OnOriginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitDistance", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UnitDistance
		{
			get
			{
				return this._UnitDistance;
			}
			set
			{
				if ((this._UnitDistance != value))
				{
					this.OnUnitDistanceChanging(value);
					this.SendPropertyChanging();
					this._UnitDistance = value;
					this.SendPropertyChanged("UnitDistance");
					this.OnUnitDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Direction", Storage="_direction", DbType="Int NOT NULL", IsPrimaryKey=true)]
		private int direction
		{
			get
			{
				return this._direction;
			}
			set
			{
				if ((this._direction != value))
				{
					this.OndirectionChanging(value);
					this.SendPropertyChanging();
					this._direction = value;
					this.SendPropertyChanged("direction");
					this.OndirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Origin_CardinalDirectionPoint", Storage="_Origin", ThisKey="OriginId", OtherKey="Id", IsForeignKey=true)]
		public Origin Origin
		{
			get
			{
				return this._Origin.Entity;
			}
			set
			{
				Origin previousValue = this._Origin.Entity;
				if (((previousValue != value) 
							|| (this._Origin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Origin.Entity = null;
						previousValue.CardinalDirectionPoints.Remove(this);
					}
					this._Origin.Entity = value;
					if ((value != null))
					{
						value.CardinalDirectionPoints.Add(this);
						this._OriginId = value.Id;
					}
					else
					{
						this._OriginId = default(int);
					}
					this.SendPropertyChanged("Origin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GridNodes")]
	public partial class GridNode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OriginId;
		
		private int _RangeMins;
		
		private int _UnitDistance;
		
		private int _X;
		
		private int _Y;
		
		private bool _Inside;
		
		private EntityRef<Origin> _Origin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOriginIdChanging(int value);
    partial void OnOriginIdChanged();
    partial void OnRangeMinsChanging(int value);
    partial void OnRangeMinsChanged();
    partial void OnUnitDistanceChanging(int value);
    partial void OnUnitDistanceChanged();
    partial void OnXChanging(int value);
    partial void OnXChanged();
    partial void OnYChanging(int value);
    partial void OnYChanged();
    partial void OnInsideChanging(bool value);
    partial void OnInsideChanged();
    #endregion
		
		public GridNode()
		{
			this._Origin = default(EntityRef<Origin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OriginId
		{
			get
			{
				return this._OriginId;
			}
			set
			{
				if ((this._OriginId != value))
				{
					if (this._Origin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOriginIdChanging(value);
					this.SendPropertyChanging();
					this._OriginId = value;
					this.SendPropertyChanged("OriginId");
					this.OnOriginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RangeMins", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RangeMins
		{
			get
			{
				return this._RangeMins;
			}
			set
			{
				if ((this._RangeMins != value))
				{
					this.OnRangeMinsChanging(value);
					this.SendPropertyChanging();
					this._RangeMins = value;
					this.SendPropertyChanged("RangeMins");
					this.OnRangeMinsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitDistance", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UnitDistance
		{
			get
			{
				return this._UnitDistance;
			}
			set
			{
				if ((this._UnitDistance != value))
				{
					this.OnUnitDistanceChanging(value);
					this.SendPropertyChanging();
					this._UnitDistance = value;
					this.SendPropertyChanged("UnitDistance");
					this.OnUnitDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inside", DbType="Bit NOT NULL")]
		public bool Inside
		{
			get
			{
				return this._Inside;
			}
			set
			{
				if ((this._Inside != value))
				{
					this.OnInsideChanging(value);
					this.SendPropertyChanging();
					this._Inside = value;
					this.SendPropertyChanged("Inside");
					this.OnInsideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Origin_GridNode", Storage="_Origin", ThisKey="OriginId", OtherKey="Id", IsForeignKey=true)]
		public Origin Origin
		{
			get
			{
				return this._Origin.Entity;
			}
			set
			{
				Origin previousValue = this._Origin.Entity;
				if (((previousValue != value) 
							|| (this._Origin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Origin.Entity = null;
						previousValue.GridNodes.Remove(this);
					}
					this._Origin.Entity = value;
					if ((value != null))
					{
						value.GridNodes.Add(this);
						this._OriginId = value.Id;
					}
					else
					{
						this._OriginId = default(int);
					}
					this.SendPropertyChanged("Origin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Origins")]
	public partial class Origin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private string _Name;
		
		private EntitySet<Region> _Regions;
		
		private EntitySet<CardinalDirectionPoint> _CardinalDirectionPoints;
		
		private EntitySet<GridNode> _GridNodes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Origin()
		{
			this._Regions = new EntitySet<Region>(new Action<Region>(this.attach_Regions), new Action<Region>(this.detach_Regions));
			this._CardinalDirectionPoints = new EntitySet<CardinalDirectionPoint>(new Action<CardinalDirectionPoint>(this.attach_CardinalDirectionPoints), new Action<CardinalDirectionPoint>(this.detach_CardinalDirectionPoints));
			this._GridNodes = new EntitySet<GridNode>(new Action<GridNode>(this.attach_GridNodes), new Action<GridNode>(this.detach_GridNodes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Origin_Region", Storage="_Regions", ThisKey="Id", OtherKey="OriginId")]
		public EntitySet<Region> Regions
		{
			get
			{
				return this._Regions;
			}
			set
			{
				this._Regions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Origin_CardinalDirectionPoint", Storage="_CardinalDirectionPoints", ThisKey="Id", OtherKey="OriginId")]
		public EntitySet<CardinalDirectionPoint> CardinalDirectionPoints
		{
			get
			{
				return this._CardinalDirectionPoints;
			}
			set
			{
				this._CardinalDirectionPoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Origin_GridNode", Storage="_GridNodes", ThisKey="Id", OtherKey="OriginId")]
		public EntitySet<GridNode> GridNodes
		{
			get
			{
				return this._GridNodes;
			}
			set
			{
				this._GridNodes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Regions(Region entity)
		{
			this.SendPropertyChanging();
			entity.Origin = this;
		}
		
		private void detach_Regions(Region entity)
		{
			this.SendPropertyChanging();
			entity.Origin = null;
		}
		
		private void attach_CardinalDirectionPoints(CardinalDirectionPoint entity)
		{
			this.SendPropertyChanging();
			entity.Origin = this;
		}
		
		private void detach_CardinalDirectionPoints(CardinalDirectionPoint entity)
		{
			this.SendPropertyChanging();
			entity.Origin = null;
		}
		
		private void attach_GridNodes(GridNode entity)
		{
			this.SendPropertyChanging();
			entity.Origin = this;
		}
		
		private void detach_GridNodes(GridNode entity)
		{
			this.SendPropertyChanging();
			entity.Origin = null;
		}
	}
}
#pragma warning restore 1591
